define({ "api": [
  {
    "type": "ServiceMethod: addOrganizationApiKey",
    "url": "organizations/addOrganizationApiKey",
    "title": "addOrganizationApiKey",
    "name": "AddOrganizationApiKey",
    "group": "ApiKey",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables only organization managers <b>(Owner/Admin)</b> to create the API key (token) and store it in the relevant organization. Each API key got the unique name which couldn't be duplicated.</p> <blockquote> <p>Note: API keys assigned with any of the relevant roles (Owner/Admin/Member) don't corresponds with the organization members similar roles and purposed only for the appropriate permission level (write or read) provision for <a href=\"http://scalecube.io/configuration-service/index.html\">Configuration service</a> users</p> </blockquote>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored org-id for the specific organization</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "apiKeyName",
            "description": "<p>Specified name for the relevant API key</p>"
          },
          {
            "group": "Parameter",
            "type": "Map",
            "optional": false,
            "field": "claims",
            "description": "<p>(&lt;String,String&gt;) Describes given identity on some role</p>"
          },
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "claims.role",
            "description": "<p>Specified role (Owner/Admin/Member - permission level for the relevant API key)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "apiKeys",
            "description": "<p>List of all API keys (Array of Objects) in the relevant organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Stored org-id for the relevant organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Organization name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Organization e-mail</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "ownerId",
            "description": "<p>id for clients already generated by relevant authority (Auth0)</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>API key name duplication</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/addOrganizationApiKey\",\n        \"sid\": 1,\n        \"d\":{\n               \"token\": {\n                           \"token\":\"Auth0-TOKEN\"\n               },\n               \"organizationId\":\"ORG-ID\",\n               \"apiKeyName\": \"specifiedApiKeyName\",\n               \"claims\": {\n                           \"role\":\"Owner\"\n               }\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/addOrganizationApiKey\",\n        \"sid\":1,\n        \"d\":{\n               \"apiKeys\": [\n                             {\n                                \"name\": \"specifiedApiKeyName\",\n                                \"claims\": {\"role\": \"Owner\"},\n                                \"key\": \"API-TOKEN\"\n                             }\n               ],\n               \"id\":\"ORG-ID\",\n               \"name\":\"specifiedOrganizationName\",\n               \"email\":\"specifiedOrganization@email.com\",\n               \"ownerId\":\"id@clients\"\n           }\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"apiKey name:'specifiedApiKeyName' already exists\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/addOrganizationApiKey\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"organizationId\":\"ORG-ID\",\n                  \"apiKeyName\": \"specifiedApiKeyName\",\n                  \"claims\": {\n                               \"role\":\"Admin\"\n               }\n        }\n    }\n\nResponse:\n    {\n        \"data\":{\n                  \"apiKeys\": [\n                                 {\n                                    \"name\": \"specifiedApiKeyName\",\n                                    \"claims\": {\"role\": \"Admin\"},\n                                    \"key\": \"API-TOKEN\"\n                                 },\n                                 {\n                                    \"name\": \"specifiedApiKeyName\",\n                                    \"claims\": {\"role\": \"Owner\"},\n                                    \"key\": \"API-TOKEN\"\n                                 }\n                  ],\n                  \"id\":\"ORG-ID\",\n                  \"name\":\"specifiedOrganizationName\",\n                  \"email\":\"specifiedOrganization@email.com\",\n                  \"ownerId\":\"id@clients\"\n        },\n        \"metadata\":{\n          \"q\": \"/organizations/addOrganizationApiKey\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"apiKey name:'specifiedApiKeyName' already exists\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/addOrganizationApiKey (endpoint url)\n\nBody:\n    {\n        \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\",\n        \"apiKeyName\": \"specifiedApiKeyName\",\n        \"claims\": {\n                     \"role\":\"Member\"\n    }\n\nResponse:\n    {\n        \"apiKeys\": [\n                      {\n                         \"name\": \"specifiedApiKeyName\",\n                         \"claims\": {\"role\": \"Member\"},\n                         \"key\": \"API-TOKEN\"\n                      },\n                      {\n                         \"name\": \"specifiedApiKeyName\",\n                         \"claims\": {\"role\": \"Admin\"},\n                         \"key\": \"API-TOKEN\"\n                      },\n                      {\n                         \"name\": \"specifiedApiKeyName\",\n                         \"claims\": {\"role\": \"Owner\"},\n                         \"key\": \"API-TOKEN\"\n                      }\n        ],\n        \"id\":\"ORG-ID\",\n        \"name\":\"specifiedOrganizationName\",\n        \"email\":\"specifiedOrganization@email.com\",\n        \"ownerId\":\"id@clients\"\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"apiKey name:'specifiedApiKeyName' already exists\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/addOrganizationApiKey.apidoc",
    "groupTitle": "ApiKey"
  },
  {
    "type": "ServiceMethod: deleteOrganizationApiKey",
    "url": "/organizations/deleteOrganizationApiKey",
    "title": "deleteOrganizationApiKey",
    "name": "DeleteOrganizationApiKey",
    "group": "ApiKey",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables only organization managers <b>(Owner/Admin)</b> to delete the API key (token) from the relevant organization.</p> <blockquote> <p>Note: API keys assigned with any of the relevant roles (Owner/Admin/Member) don't corresponds with the organization members similar roles and purposed only for the appropriate permission level (write or read) provision for <a href=\"http://scalecube.io/configuration-service/index.html\">Configuration service</a> users</p> </blockquote>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored id for the specific organization</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "apiKeyName",
            "description": "<p>Specified name for the relevant API key</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "apiKeys",
            "description": "<p>List of all API keys (Array of Objects) in the relevant organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Stored org-id for the relevant organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Organization name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Organization e-mail</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "ownerId",
            "description": "<p>id for clients already generated by relevant authority (Auth0)</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>Invalid role (permission level) for specified organization member either organization outsider</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/deleteOrganizationApiKey\",\n        \"sid\": 1,\n        \"d\":{\n              \"token\": {\n                          \"token\":\"Auth0-TOKEN\"\n              },\n        \"organizationId\":\"ORG-ID\",\n        \"apiKeyName\": \"specifiedApiKeyName\",\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/deleteOrganizationApiKey\",\n        \"sid\":1,\n        \"d\":{\n               \"apiKeys\":[],\n               \"id\":\"ORG-ID\",\n               \"name\":\"specifiedOrganizationName\",\n               \"email\":\"specifiedOrganization@email.com\",\n               \"ownerId\":\"id@clients\"\n        }\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/deleteOrganizationApiKey\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n        \"organizationId\":\"ORG-ID\",\n        \"apiKeyName\": \"specifiedApiKeyName\",\n        }\n    }\n\nResponse:\n    {\n        \"data\":{\n                  \"apiKeys\":[],\n                  \"id\":\"ORG-ID\",\n                  \"name\":\"specifiedOrganizationName\",\n                  \"email\":\"specifiedOrganization@email.com\",\n                  \"ownerId\":\"id@clients\"\n        },\n        \"metadata\":{\n          \"q\": \"/organizations/deleteOrganizationApiKey\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/createRepository (endpoint url)\n\nBody:\n    {\n       \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\",\n        \"apiKeyName\": \"specifiedApiKeyName\",\n    }\n\nResponse:\n    {\n        \"apiKeys\":[],\n        \"id\":\"ORG-ID\",\n        \"name\":\"specifiedOrganizationName\",\n        \"email\":\"specifiedOrganization@email.com\",\n        \"ownerId\":\"id@clients\"\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/deleteOrganizationApiKey.apidoc",
    "groupTitle": "ApiKey"
  },
  {
    "type": "ServiceMethod: getOrganizationMembers",
    "url": "/organizations/getOrganizationMembers",
    "title": "getOrganizationMembers",
    "name": "GetOrganizationMembers",
    "group": "Member",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables only organization managers <b>(Owner/Admin)</b> to fetch all the members from the relevant organization</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored id for the specific organization</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "members",
            "description": "<p>List of all the members (Array of Objects) in the specified organization</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>value of invalid or non-existent organization id</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/getOrganizationMembers\",\n        \"sid\": 1,\n        \"d\":{\n               \"token\": {\n                           \"token\":\"Auth0-TOKEN\"\n               },\n               \"organizationId\":\"ORG-ID\"\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/getOrganizationMembers\",\n        \"sid\":1,\n        \"d\":{\n               \"members\":[\n                            {\"id\":\"id@clients\",\"role\":\"Owner\"},\n                            {\"id\":\"id@clients\",\"role\":\"Admin\"},\n                            {\"id\":\"id@clients\",\"role\":\"Member\"}\n               ]\n        }\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/getOrganizationMembers\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"organizationId\":\"ORG-ID\"\n        }\n    }\n\nResponse:\n    {\n        \"data\":{\n                  \"members\":[\n                               {\"id\":\"id@clients\",\"role\":\"Owner\"},\n                               {\"id\":\"id@clients\",\"role\":\"Admin\"},\n                               {\"id\":\"id@clients\",\"role\":\"Member\"}\n                  ]\n        },\n        \"metadata\":{\n          \"q\": \"/organizations/getOrganizationMembers\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/getOrganizationMembers (endpoint url)\n\nBody:\n    {\n        \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\"\n    }\n\nResponse:\n    {\n               \"members\":[\n                            {\"id\":\"id@clients\",\"role\":\"Owner\"},\n                            {\"id\":\"id@clients\",\"role\":\"Admin\"},\n                            {\"id\":\"id@clients\",\"role\":\"Member\"}\n               ]\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/getOrganizationMembers.apidoc",
    "groupTitle": "Member"
  },
  {
    "type": "ServiceMethod: inviteMember",
    "url": "/organizations/inviteMember",
    "title": "inviteMember",
    "name": "InviteMember",
    "group": "Member",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables only organization managers <b>(Owner/Admin)</b> to invite a valid user (which client id issued by relevant authority - <a href=\"https://manage.auth0.com/\">Auth0</a>) to step into relevant organization</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored id for the specific organization</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "userId",
            "description": "<p>Already stored id for the specific organization issued by relevant authority (Auth0)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "optional": false,
            "field": "Acknowledgment",
            "description": "<p>Empty object</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>Invalid role (permission level) for specified organization member either organization outsider</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/inviteMember\",\n        \"sid\": 1,\n        \"d\":{\n               \"token\": {\n                           \"token\":\"Auth0-TOKEN\"\n               },\n               \"organizationId\":\"ORG-ID\",\n               \"userId\": \"id@clients\"\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/inviteMember\",\n        \"sid\":1,\n        \"d\":{}\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/inviteMember\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"organizationId\":\"ORG-ID\",\n                  \"userId\": \"id@clients\"\n        }\n    }\n\nResponse:\n    {\n        \"data\":{},\n        \"metadata\":{\n          \"q\": \"/organizations/inviteMember\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/inviteMember (endpoint url)\n\nBody:\n    {\n        \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\",\n        \"userId\": \"id@clients\"\n    }\n\nResponse:\n    {\n\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/inviteMember.apidoc",
    "groupTitle": "Member"
  },
  {
    "type": "ServiceMethod: kickoutMember",
    "url": "/organizations/kickoutMember",
    "title": "kickoutMember",
    "name": "KickoutMember",
    "group": "Member",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables only organization managers <b>(Owner/Admin)</b> to remove the existent organization member with any accessible role. <br>Nevertheless at least one Owner (origin or granted one) should be persisted in the organization</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored id for the specific organization</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "userId",
            "description": "<p>Already stored id for the specific organization issued by relevant authority (Auth0)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "optional": false,
            "field": "Acknowledgment",
            "description": "<p>Empty object</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>Single (last one) organization Owner is requested to be removed from the relevant organization</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/kickoutMember\",\n        \"sid\": 1,\n        \"d\":{\n               \"token\": {\n                           \"token\":\"Auth0-TOKEN\"\n               },\n               \"organizationId\":\"ORG-ID\",\n               \"userId\": \"id@clients\"\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/kickoutMember\",\n        \"sid\":1,\n        \"d\":{}\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"At least one Owner should be persisted in the organization: 'ORG-ID'\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/kickoutMember\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"organizationId\":\"ORG-ID\",\n                  \"userId\": \"id@clients\"\n        }\n    }\n\nResponse:\n    {\n        \"data\":{},\n        \"metadata\":{\n          \"q\": \"/organizations/kickoutMember\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"At least one Owner should be persisted in the organization: 'ORG-ID'\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/kickoutMember (endpoint url)\n\nBody:\n    {\n        \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\",\n        \"userId\": \"id@clients\"\n    }\n\nResponse:\n    {\n\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"At least one Owner should be persisted in the organization: 'ORG-ID'\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/kickoutMember.apidoc",
    "groupTitle": "Member"
  },
  {
    "type": "ServiceMethod: updateOrganizationMemberRole",
    "url": "/organizations/updateOrganizationMemberRole",
    "title": "updateOrganizationMemberRole",
    "name": "UpdateOrganizationMemberRole",
    "group": "Member",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables only organization managers <b>(Owner/Admin)</b> to upgrade/downgrade relevant organization member role. <br>Any of the members who posses Admin role couldn't upgrade themselves whereby only the members with higher - Owner roles are able to do that. Nevertheless any member with Admin or Owner role could downgrade themselves as do the members with Owner role could downgrade the members with Admin role. <br>Permission level (Owner/Admin/Member) for each API key is automatically updated to the relevant one upon the managers who already issued these API keys were upgraded or downgraded to one of the accessible roles (Owner/Admin/Member) in the organization</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored id for the specific organization</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "userId",
            "description": "<p>Already stored id for the specific organization issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "role",
            "description": "<p>any of accessible member's role (Owner/Admin/Member)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "optional": false,
            "field": "Acknowledgment",
            "description": "<p>Empty object</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>user isn't the member (outsider) of the specified organization</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/updateOrganizationMemberRole\",\n        \"sid\": 1,\n        \"d\":{\n               \"token\": {\n                           \"token\":\"Auth0-TOKEN\"\n               },\n               \"organizationId\":\"ORG-ID\",\n               \"userId\": \"id@clients\",\n               \"role\": \"Owner\"\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/updateOrganizationMemberRole\",\n        \"sid\":1,\n        \"d\":{}\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"user: 'null', name: 'id@clients', is not a member of organization: 'ORG-ID'\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/updateOrganizationMemberRole\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"organizationId\":\"ORG-ID\",\n                  \"userId\": \"id@clients\",\n                  \"role\": \"Admin\"\n        }\n    }\n\nResponse:\n    {\n        \"data\":{},\n        \"metadata\":{\n          \"q\": \"/organizations/updateOrganizationMemberRole\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"user: 'null', name: 'id@clients', is not a member of organization: 'ORG-ID'\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/updateOrganizationMemberRole (endpoint url)\n\nBody:\n    {\n        \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\",\n        \"userId\": \"id@clients\",\n        \"role\": \"Member\"\n    }\n\nResponse:\n    {\n\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"user: 'null', name: 'id@clients', is not a member of organization: 'ORG-ID'\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/updateOrganizationMemberRole.apidoc",
    "groupTitle": "Member"
  },
  {
    "type": "ServiceMethod: create",
    "url": "/organizations/create",
    "title": "create",
    "name": "CreateOrganization",
    "group": "Organization",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables any user with valid <a href=\"https://manage.auth0.com/\">Token</a> to create the specific organization and store its information (metadata)</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Specified organization name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Specified organization e-mail</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "apiKeys",
            "description": "<p>List of all API keys (Array of objects) for the relevant organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Generated id for the created organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Specified organization name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Specified organization e-mail</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "ownerId",
            "description": "<p>id for clients already generated by relevant authority (Auth0)</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>Organization name wasn't specified</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/create\",\n        \"sid\": 1,\n        \"d\":{\n              \"token\": {\n                          \"token\":\"Auth0-TOKEN\"\n              },\n              \"name\":\"specifiedOrganizationName\",\n              \"email\":\"specifiedOrganization@email.com\"\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/create\",\n        \"sid\":1,\n        \"d\":{\n               \"apiKeys\":[],\n               \"id\":\"ORG-ID\",\n               \"name\":\"specifiedOrganizationName\",\n               \"email\":\"specifiedOrganization@email.com\",\n               \"ownerId\":\"id@clients\"\n        }\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"Organization name cannot be empty\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/create\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"name\":\"specifiedOrganizationName\",\n                  \"email\":\"specifiedOrganization@email.com\"\n        }\n    }\n\nResponse:\n    {\n        \"data\":{\n                  \"apiKeys\":[],\n                  \"id\":\"ORG-ID\",\n                  \"name\":\"specifiedOrganizationName\",\n                  \"email\":\"specifiedOrganization@email.com\",\n                  \"ownerId\":\"id@clients\"\n        },\n        \"metadata\":{\n          \"q\": \"/organizations/create\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"Organization name cannot be empty\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/create (endpoint url)\n\nBody:\n    {\n       \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"name\":\"specifiedOrganizationName\",\n        \"email\":\"specifiedOrganization@email.com\"\n    }\n\nResponse:\n    {\n        \"apiKeys\":[],\n        \"id\":\"ORG-ID\",\n        \"name\":\"specifiedOrganizationName\",\n        \"email\":\"specifiedOrganization@email.com\",\n        \"ownerId\":\"id@clients\"\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"Organization name cannot be empty\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/createOrganization.apidoc",
    "groupTitle": "Organization"
  },
  {
    "type": "ServiceMethod: delete",
    "url": "/organizations/delete",
    "title": "delete",
    "name": "DeleteOrganization",
    "group": "Organization",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables only <b>Owners</b> to delete relevant organization. <br>All relevant API keys issued for organization also deleted thus become invalid upon this operation was done</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored id for the specific organization</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "deleted",
            "description": "<p>The &quot;true&quot; statement</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already Stored id for the specific organization</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>Invalid or non-existent organization id</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/delete\",\n        \"sid\": 1,\n        \"d\":{\n               \"token\": {\n                           \"token\":\"Auth0-TOKEN\"\n               },\n               \"organizationId\":\"ORG-ID\"\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/delete\",\n        \"sid\":1,\n        \"d\":{\n               \"deleted\": true,\n               \"organizationId\": \"ORG-ID\"\n        }\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"ORG-ID\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/delete\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"organizationId\":\"ORG-ID\"\n        }\n    }\n\nResponse:\n    {\n        \"data\":{\n                  \"deleted\": true,\n                  \"organizationId\": \"ORG-ID\"\n        },\n        \"metadata\":{\n          \"q\": \"/organizations/delete\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"ORG-ID\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/delete (endpoint url)\n\nBody:\n    {\n        \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\"\n    }\n\nResponse:\n    {\n        \"deleted\": true,\n        \"organizationId\": \"ORG-ID\"\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"ORG-ID\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/deleteOrganization.apidoc",
    "groupTitle": "Organization"
  },
  {
    "type": "ServiceMethod: getOrganization",
    "url": "/organizations/getOrganization",
    "title": "getOrganization",
    "name": "GetOrganization",
    "group": "Organization",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables <b>all members</b> of the relevant organization to get the organization information</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored id for the specific organization</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "apiKeys",
            "description": "<p>List of all API keys (Array of objects) for the relevant organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Already generated id for the created organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Organization name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Organization e-mail</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "ownerId",
            "description": "<p>id for clients already generated by relevant authority (Auth0)</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>Invalid or expired token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/getOrganization\",\n        \"sid\": 1,\n        \"d\":{\n               \"token\": {\n                           \"token\":\"Auth0-TOKEN\"\n               },\n               \"organizationId\":\"ORG-ID\"\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/getOrganization\",\n        \"sid\":1,\n        \"d\":{\n               \"apiKeys\":[],\n               \"id\":\"ORG-ID\",\n               \"name\":\"specifiedOrganizationName\",\n               \"email\":\"specifiedOrganization@email.com\",\n               \"ownerId\":\"id@clients\"\n        }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               errorCode\":500,\n               \"errorMessage\":\"Token verification failed\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/getOrganization\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"name\":\"specifiedOrganizationName\",\n                  \"email\":\"specifiedOrganization@email.com\"\n        }\n    }\n\nResponse:\n    {\n        \"data\":{\n                  \"apiKeys\":[],\n                  \"id\":\"ORG-ID\",\n                  \"name\":\"specifiedOrganizationName\",\n                  \"email\":\"specifiedOrganization@email.com\",\n                  \"ownerId\":\"id@clients\"\n        },\n        \"metadata\":{\n          \"q\": \"/organizations/getOrganization\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"Token verification failed\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/getOrganization (endpoint url)\n\nBody:\n    {\n        \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\"\n    }\n\nResponse:\n    {\n        \"apiKeys\":[],\n        \"id\":\"ORG-ID\",\n        \"name\":\"specifiedOrganizationName\",\n        \"email\":\"specifiedOrganization@email.com\",\n        \"ownerId\":\"id@clients\"\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"Token verification failed\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/getOrganization.apidoc",
    "groupTitle": "Organization"
  },
  {
    "type": "ServiceMethod: getUserOrganizationsMembership",
    "url": "/organizations/getUserOrganizationsMembership",
    "title": "getUserOrganizationsMembership",
    "name": "GetUserOrganizationsMembership",
    "group": "Organization",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables each organization member to get the list of all relevant organizations (full info) which the member was invited</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "apiKeys",
            "description": "<p>List of all API keys (Array of objects) for the relevant organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Already generated id for the created organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>Organization name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>Organization e-mail</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "ownerId",
            "description": "<p>id for clients already generated by relevant authority (Auth0)</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>Invalid or expired token</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/getUserOrganizationsMembership\",\n        \"sid\": 1,\n        \"d\":{\n              \"token\": {\n                          \"token\":\"Auth0-TOKEN\"\n              }\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/getUserOrganizationsMembership\",\n        \"sid\":1,\n        \"d\":{\n               \"apiKeys\":[],\n               \"id\":\"ORG-ID\",\n               \"name\":\"specifiedOrganizationName\",\n               \"email\":\"specifiedOrganization@email.com\",\n               \"ownerId\":\"id@clients\"\n        }\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"Token verification failed\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/getUserOrganizationsMembership\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  }\n        }\n    }\n\nResponse:\n    {\n        \"data\":{\n                  \"apiKeys\":[],\n                  \"id\":\"ORG-ID\",\n                  \"name\":\"specifiedOrganizationName\",\n                  \"email\":\"specifiedOrganization@email.com\",\n                  \"ownerId\":\"id@clients\"\n        },\n        \"metadata\":{\n          \"q\": \"/organizations/getUserOrganizationsMembership\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"Token verification failed\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/getUserOrganizationsMembership (endpoint url)\n\nBody:\n    {\n        \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        }\n    }\n\nResponse:\n    {\n        \"apiKeys\":[],\n        \"id\":\"ORG-ID\",\n        \"name\":\"specifiedOrganizationName\",\n        \"email\":\"specifiedOrganization@email.com\",\n        \"ownerId\":\"id@clients\"\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"Token verification failed\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/getUserOrganizationsMembership.apidoc",
    "groupTitle": "Organization"
  },
  {
    "type": "ServiceMethod: leaveOrganization",
    "url": "/organizations/leaveOrganization",
    "title": "leaveOrganization",
    "name": "LeaveOrganization",
    "group": "Organization",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables each organization member to step-out (leave) from the relevant organization. <br>Nevertheless at least one Owner (origin or granted one) should be persisted in the organization</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored id for the specific organization</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "optional": false,
            "field": "Acknowledgment",
            "description": "<p>Empty object</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>Single (last one) organization Owner requested to leave the relevant organization</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/leaveOrganization\",\n        \"sid\": 1,\n        \"d\":{\n               \"token\": {\n                           \"token\":\"Auth0-TOKEN\"\n               },\n               \"organizationId\":\"ORG-ID\"\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/leaveOrganization\",\n        \"sid\":1,\n        \"d\":{}\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"At least one Owner should be persisted in the organization: 'ORG-ID'\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/leaveOrganization\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"organizationId\":\"ORG-ID\"\n        }\n    }\n\nResponse:\n    {\n        \"data\":{},\n        \"metadata\":{\n          \"q\": \"/organizations/leaveOrganization\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"At least one Owner should be persisted in the organization: 'ORG-ID'\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/leaveOrganization (endpoint url)\n\nBody:\n    {\n        \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\"\n    }\n\nResponse:\n    {\n\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"At least one Owner should be persisted in the organization: 'ORG-ID'\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/leaveOrganization.apidoc",
    "groupTitle": "Organization"
  },
  {
    "type": "ServiceMethod: updateOrganization",
    "url": "/organizations/updateOrganization",
    "title": "updateOrganization",
    "name": "UpdateOrganization",
    "group": "Organization",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Request / Response / Error-response"
      }
    ],
    "description": "<p>This operation enables only organization managers <b>(Owner/Admin)</b> to update (edit) the specific organization information (name or email) optionally</p>",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "Object",
            "optional": false,
            "field": "token",
            "description": "<p>The requested token issued by relevant authority (Auth0)</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "organizationId",
            "description": "<p>Already stored id for the specific organization</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>New specified organization name</p>"
          },
          {
            "group": "Parameter",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>New specified organization e-mail</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Object[]",
            "optional": false,
            "field": "apiKeys",
            "description": "<p>List of all API keys (Array of objects) for the relevant organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>Already generated id for the created organization</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "name",
            "description": "<p>New specified organization name</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "email",
            "description": "<p>New specified organization e-mail</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "ownerId",
            "description": "<p>id for clients already generated by relevant authority (Auth0)</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "String",
            "optional": false,
            "field": "field",
            "description": "<p>Organization e-mail wasn't specified</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "WebSocket",
          "content": "Request:\n    {\n        \"q\":\"/organizations/updateOrganization\",\n        \"sid\": 1,\n        \"d\":{\n              \"token\": {\n                          \"token\":\"Auth0-TOKEN\"\n              },\n        \"organizationId\":\"ORG-ID\",\n        \"name\":\"newSpecifiedOrganizationName\",\n        \"email\":\"newSpecifiedOrganization@email.com\"\n        }\n    }\n\nResponse:\n    {\n        \"q\":\"/organizations/updateOrganization\",\n        \"sid\":1,\n        \"d\":{\n               \"apiKeys\":[],\n               \"id\":\"ORG-ID\",\n               \"name\":\"newSpecifiedOrganizationName\",\n               \"email\":\"newSpecifiedOrganization@email.com\",\n               \"ownerId\":\"id@clients\"\n        }\n\n    }\n\n    {\n        \"sig\":1,\n        \"sid\":1\n    }\n\nError Response:\n    {\n        \"sig\":2,\n        \"q\":\"/io.scalecube.services.error/500\",\n        \"sid\":1,\n        \"d\":{\n               \"errorCode\":500,\n               \"errorMessage\":\"Organization email cannot be empty\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "RSocket",
          "content": "Request:\n    {\n        \"metadata\":{\n                     \"q\": \"/organizations/updateOrganization\"\n        },\n        \"data\":{\n                  \"token\": {\n                              \"token\":\"Auth0-TOKEN\"\n                  },\n                  \"organizationId\":\"ORG-ID\",\n                  \"name\":\"newSpecifiedOrganizationName\",\n                  \"email\":\"newSpecifiedOrganization@email.com\"\n        }\n    }\n\nResponse:\n    {\n        \"data\":{\n                  \"apiKeys\":[],\n                  \"id\":\"ORG-ID\",\n                  \"name\":\"newSpecifiedOrganizationName\",\n                  \"email\":\"newSpecifiedOrganization@email.com\",\n                  \"ownerId\":\"id@clients\"\n        },\n        \"metadata\":{\n          \"q\": \"/organizations/updateOrganization\"\n        }\n    }\n\nError Response:\n    {\n        \"data\":{\n                  \"errorCode\":500,\n                  \"errorMessage\":\"Organization email cannot be empty\"\n        },\n        \"metadata\":{\n                     \"q\":\"/io.scalecube.services.error/500\"\n        }\n    }",
          "type": "json"
        },
        {
          "title": "HTTP",
          "content": "Request:\nhttps://localhost:port/organizations/updateOrganization (endpoint url)\n\nBody:\n    {\n       \"token\": {\n                    \"token\":\"Auth0-TOKEN\"\n        },\n        \"organizationId\":\"ORG-ID\",\n        \"name\":\"newSpecifiedOrganizationName\",\n        \"email\":\"newSpecifiedOrganization@email.com\"\n    }\n\nResponse:\n    {\n        \"apiKeys\":[],\n        \"id\":\"ORG-ID\",\n        \"name\":\"newSpecifiedOrganizationName\",\n        \"email\":\"newSpecifiedOrganization@email.com\",\n        \"ownerId\":\"id@clients\"\n    }\n\nError Response:\n    {\n        \"errorCode\":500,\n        \"errorMessage\":\"Organization email cannot be empty\"\n    }",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/updateOrganization.apidoc",
    "groupTitle": "Organization"
  },
  {
    "type": "",
    "url": ".",
    "title": "Getting Started",
    "name": "GettingStarted",
    "group": "Overview",
    "version": "2.0.17-SNAPSHOT",
    "description": "<p>Organization service enable you to integrate the API in order to create and manage the organizations. Besides the origin owner unique ability to create the organization there is a necessity for each organization member to achieve appropriate managers' permission level (roles: Owner/Admin) granted by other managers of the relevant organization for management ability. Thus each organization could be deleted or relevant credentials updated, authorized users could be invited to and removed from the relevant organization, each member could get the info about the relevant organization and also to know the own membership in the all related organizations. Organization managers could provide and delete the relevant API keys (permission level with appropriate assigned role: Owner/Admin/Member) which are vital leverage for the <a href=\"http://scalecube.io/configuration-service/index.html\">Configuration service</a> management and security purpose.</p> <blockquote> <p>Note: API key assigned with relevant role (Owner/Admin/Member) don't corresponds with the organization members similar roles.</p> </blockquote> <p><b>Getting Started</b></p> <p>All API endpoints documented below are the integral part of <a href=\"http://scalecube.io/configuration-service/index.html\">Configuration service</a> <a href=\"https://github.com/jivygroup/exchange/wiki/Configuration-&-Organization-services-host-addresses\"><b>host address</b></a>. <br> You can try out any query in realtime using our interactive API. Actually service requires authentication, so there is a necessity to get the token issued via secured authority. Thus, we recommend you first to create an account in <a href=\"https://manage.auth0.com/\">Auth0</a> and issue the token whereby to perform the valid requests across all service endpoints.</p> <p><b>Validation</b> for the object entities is handled by <b>Scalecube</b> services and do the next upon the request object:</p> <blockquote> <p>~ ignores any excessive keys and values added besides the required parameters <br>~ doesn't ignore the keys duplicates and takes the last values which applied for each of the relevant key duplicate</p> </blockquote> <blockquote> <p>Contracts validation is implemented for specific parameters which value type is string and can only contain characters in range A-Z, a-z, 0-9 as well as underscore, period, dash &amp; percent. Appropriate validation will be added soon.</p> </blockquote>",
    "filename": "/apidoc/docs/overview.apidoc",
    "groupTitle": "Overview"
  },
  {
    "type": "",
    "url": ".",
    "title": "Interactive API Explorer",
    "name": "InteractiveAPIExplorer",
    "group": "Overview",
    "version": "2.0.17-SNAPSHOT",
    "description": "<p><b>WebSocket and RSocket</b> transports are accessible to apply via in-house developed API Explorer called <b>Sandbox</b> thus to connect and run follow up the next steps:</p>    <ul>                   <li> Navigate to the sandbox: <a href=\"http://scalecube.io/api-sandbox/app/index.html\">Scalecube sandbox</a> </li>                   <li> Click on the <b>Settings</b> button then set the relevant <a href=\"https://github.com/jivygroup/exchange/wiki/Configuration-&-Organization-services-host-addresses\"><b>Host address</b></a> for the chosen <b>transport</b> </li>                   <li> Click on <b>Import icon</b> and copy-paste the template.json file path for <a href=\"https://raw.githubusercontent.com/scalecube/scalecube-organization-service/master/API-Calls-examples.json\">Organization service endpoints.json</a></li>                   <li> Click on the <b>Connect</b> button (now you are connected to the environment) and push <b>Send</b> button to make your request</li>    </ul>",
    "filename": "/apidoc/docs/overview.apidoc",
    "groupTitle": "Overview"
  },
  {
    "type": "",
    "url": ".",
    "title": "Transport protocols API",
    "name": "TransportProtocols",
    "group": "Overview",
    "version": "2.0.17-SNAPSHOT",
    "permission": [
      {
        "name": "Successful requests and responses"
      }
    ],
    "description": "<p>You are able to manage the service API through the three types of transport protocols which are supported. <br>Upon relevant <a href=\"https://github.com/jivygroup/exchange/wiki/Configuration-&-Organization-services-host-addresses\"><b>Host address</b></a> was set the <b>request</b> should contain the following structure according to transport protocol usage: <ul> <b>Websocket (WS)</b> <li> &quot;q&quot;: The query of the relevant service name and method used </li> <li> &quot;sid&quot;: The stream identifier (couldn't be reused upon current stream connection is opened)</li> <li> &quot;d&quot;: The request data object (parameters and values) </li> <br><b>RSocket (RS)</b> <li> &quot;metadata&quot;: object which contains &quot;q&quot;: The query of the relevant service name and method used </li> <li> &quot;d&quot;: object: The request data (parameters and values) </li> <br><b>HTTP</b> (service name and method used should be added to the relevant host address) <li> &quot;headers&quot;: Content-Type application/json </li> <li> &quot;body&quot; json: The request data object (parameters and values) </li> <li>  request &quot;method&quot;: POST </li> </ul></p>",
    "parameter": {
      "examples": [
        {
          "title": "WebSocket:",
          "content": "Request:\n{\n    \"q\": \"/serviceName/method_name\",\n    \"sid\":int,\n    \"d\": {\n            \"relevant request parameters and values\"\n         }\n}\n\nResponse:\n{\n    \"q\":\"/serviceName/method_name\",\n    \"sid\":int,\n    \"d\":{\n           \"relevant response parameters and values\"\n        }\n}\n{\n    \"sig\":1,\n    \"sid\":int\n}",
          "type": "json"
        },
        {
          "title": "RSocket:",
          "content": "Request:\n{\n   \"metadata\": {\n       \"q\": \"/serviceName/method_name\"\n               },\n       \"data\": {\n                  \"relevant request parameters and values\"\n               }\n}\n\nResponse:\n{\n    \"data\":{\n              \"relevant response parameters and values\"\n    },\n    \"metadata\":{\n      \"q\": \"/serviceName/method_name\"\n    }\n}",
          "type": "json"
        },
        {
          "title": "HTTP:",
          "content": "Request:\nhttps://localhost:port/serviceName/method_name (endpoint url)\n\nBody:\n{\n   \"relevant request parameters and values\"\n}\n\nResponse:\n{\n   \"relevant response parameters and values\"\n}",
          "type": "json"
        }
      ]
    },
    "filename": "/apidoc/docs/overview.apidoc",
    "groupTitle": "Overview"
  }
] });
